@startuml
/**
 * @file sequence.puml
 * @brief End-to-End Event Processing Flow
 *
 * Documents the complete system response to user interaction:
 * 1. Physical Layer: Touch detection
 * 2. UI Layer: Event routing
 * 3. Network Layer: Secure transmission
 * 4. Storage Layer: Offline persistence
 *
 * Timing Constraints:
 * - Touch→UI: <50ms
 * - UI→Cloud: <500ms (connected)
 * - Retry Interval: 2^n seconds (max 30s)
 *
 * Error Handling:
 * - E101: Invalid coordinates
 * - E205: MQTT rejection  
 * - E301: Payload validation
 * - E402: Storage full
 *
 * @version 2.3
 * @date 2025-06-01
 */
title Button Event Sequence Diagram
skinparam ParticipantPadding 20
skinparam BoxPadding 10

actor User
participant "Touch Controller" as touch
participant "LVGL Engine" as lvgl
participant "EventHandler" as handler
participant "AWS Client" as aws
participant "SD Card" as sd

User -> touch : Press Button
touch -> lvgl : Raw Coordinates (x,y,pressure)
lvgl -> handler : Resolve UI Event

alt Valid Press
  handler -> aws : postButtonEvent(zone,assignee)
  
  aws -> aws : Check Connection
  alt Connection Active
    aws -> "AWS IoT" : MQTT Publish\n(topic: button/${zone}/press\npayload: {"assignee":"${name}"})
    "AWS IoT" --> aws : PubAck (QoS 1)
    aws --> handler : Success (code 200)
  else Connection Failed
    aws -> sd : Cache Event\n(/pending/events_${timestamp}.json)
    sd --> aws : Write Confirm
    handler -> lvgl : Show "Queued" Badge
  end
  
else Invalid Press
  handler -> lvgl : Show Error Toast\n"Invalid Zone"
end

handler --> User : Visual Feedback
@enduml
